// <auto-generated />
using System;
using HRIS.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRIS.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220913092218_AddedFiledDateField")]
    partial class AddedFiledDateField
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HRIS.Domain.Entities.Announcement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar")
                        .HasColumnName("created_by");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("update_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("announcements", (string)null);
                });

            modelBuilder.Entity("HRIS.Domain.Entities.CalendarTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("DateTask")
                        .HasColumnType("datetime")
                        .HasColumnName("date_task");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("calendar_tasks", (string)null);
                });

            modelBuilder.Entity("HRIS.Domain.Entities.DailyRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("employee_id");

                    b.Property<DateTime>("LunchIn")
                        .HasColumnType("datetime")
                        .HasColumnName("lunch_in");

                    b.Property<DateTime>("LunchOut")
                        .HasColumnType("datetime")
                        .HasColumnName("lunch_out");

                    b.Property<DateTime>("OTIn")
                        .HasColumnType("datetime")
                        .HasColumnName("ot_in");

                    b.Property<DateTime>("OTOut")
                        .HasColumnType("datetime")
                        .HasColumnName("ot_out");

                    b.Property<DateTime>("TimeIn")
                        .HasColumnType("datetime")
                        .HasColumnName("time_in");

                    b.Property<DateTime>("TimeOut")
                        .HasColumnType("datetime")
                        .HasColumnName("time_out");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("daily_records", (string)null);
                });

            modelBuilder.Entity("HRIS.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_name");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_no");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("date")
                        .HasColumnName("date_hired");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("employee_no");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<Guid>("MandatoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("schedule_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.Property<Guid>("WorkPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("work_position_id");

                    b.HasKey("Id");

                    b.HasIndex("MandatoryId")
                        .IsUnique();

                    b.HasIndex("ScheduleId");

                    b.HasIndex("WorkPositionId");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("HRIS.Domain.Entities.LeaveRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("FiledDate")
                        .HasColumnType("datetime")
                        .HasColumnName("filed_date");

                    b.Property<DateTime>("LeaveEndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("leave_end_date");

                    b.Property<DateTime>("LeaveStartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("leave_start_date");

                    b.Property<int>("Leavetype")
                        .HasColumnType("int")
                        .HasColumnName("leave_type")
                        .HasComment("1 with pay, 0 w/o pay");

                    b.Property<string>("ReasonOfLeave")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reason_of_leave");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("leave_records", (string)null);
                });

            modelBuilder.Entity("HRIS.Domain.Entities.Mandatory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<Guid>("EmployeeId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("employee_id");

                    b.Property<string>("HMO")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("hmo");

                    b.Property<string>("PagIbig")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("pag_ibig");

                    b.Property<string>("PhilHealth")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phil_health");

                    b.Property<string>("SSS")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sss");

                    b.Property<string>("TIN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tin");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("mandatory", (string)null);
                });

            modelBuilder.Entity("HRIS.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("icon");

                    b.Property<int?>("IsShown")
                        .HasColumnType("int")
                        .HasColumnName("is_shown");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Page")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("page");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("sort");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("menus", (string)null);
                });

            modelBuilder.Entity("HRIS.Domain.Entities.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_time");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("schedules", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e24fb47a-2d0a-4908-a01f-be00ffc6dd14"),
                            CreatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(9027),
                            CreatedBy = "System",
                            EndTime = new DateTime(1, 1, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Morning Shift",
                            StartTime = new DateTime(1, 1, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(9029),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = new Guid("414b1c06-8416-4a32-b6fe-7ad743c36a44"),
                            CreatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(9032),
                            CreatedBy = "System",
                            EndTime = new DateTime(1, 1, 1, 5, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Night Shift",
                            StartTime = new DateTime(1, 1, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(9033),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = new Guid("6e6b1232-f968-469e-a4c0-c00e160c4082"),
                            CreatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(9035),
                            CreatedBy = "System",
                            EndTime = new DateTime(1, 1, 1, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Marketing Shift",
                            StartTime = new DateTime(1, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(9035),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = new Guid("6bab620c-3255-435e-bb8a-792efaa35c2e"),
                            CreatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(9037),
                            CreatedBy = "System",
                            EndTime = new DateTime(1, 1, 1, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "IT Shift",
                            StartTime = new DateTime(1, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(9038),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = new Guid("946ce33f-92a6-47ce-b26a-d41dd52b2bd9"),
                            CreatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(9040),
                            CreatedBy = "System",
                            EndTime = new DateTime(1, 1, 1, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HR Shift",
                            StartTime = new DateTime(1, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            UpdatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(9040),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("HRIS.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<Guid>("EmployeeId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("employee_id");

                    b.Property<DateTime>("LastLoginTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_login_time");

                    b.Property<string>("Nickname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nickname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profile_image");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("User")
                        .HasColumnName("role");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("HRIS.Domain.Entities.Whitelist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ip");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("remark");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("whitelists", (string)null);
                });

            modelBuilder.Entity("HRIS.Domain.Entities.WorkPosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.Property<string>("WorkCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("work_code");

                    b.HasKey("Id");

                    b.ToTable("work_position", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8822a060-6ff1-4d30-b6d2-7f85eaeb12f6"),
                            CreatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7915),
                            CreatedBy = "System",
                            Name = "NetCore Developer",
                            UpdatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7924),
                            UpdatedBy = "System",
                            WorkCode = "NCD"
                        },
                        new
                        {
                            Id = new Guid("bd2dc09c-c7d9-4576-ab1a-89fc46815263"),
                            CreatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7927),
                            CreatedBy = "System",
                            Name = "Frontend Developer",
                            UpdatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7927),
                            UpdatedBy = "System",
                            WorkCode = "FED"
                        },
                        new
                        {
                            Id = new Guid("5296209f-ffd7-490e-9457-20409a6f5e9d"),
                            CreatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7929),
                            CreatedBy = "System",
                            Name = "Chat Support",
                            UpdatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7930),
                            UpdatedBy = "System",
                            WorkCode = "CS"
                        },
                        new
                        {
                            Id = new Guid("725ad422-2309-4b47-b9d4-b01887435250"),
                            CreatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7932),
                            CreatedBy = "System",
                            Name = "Marketing",
                            UpdatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7932),
                            UpdatedBy = "System",
                            WorkCode = "MKT"
                        },
                        new
                        {
                            Id = new Guid("5f7050f8-b3a2-4592-84ff-33454962a247"),
                            CreatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7934),
                            CreatedBy = "System",
                            Name = "Affiliate",
                            UpdatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7934),
                            UpdatedBy = "System",
                            WorkCode = "AFF"
                        },
                        new
                        {
                            Id = new Guid("ef98b075-2f87-4959-8faa-d788bc1b001e"),
                            CreatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7936),
                            CreatedBy = "System",
                            Name = "Data Analyst",
                            UpdatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7936),
                            UpdatedBy = "System",
                            WorkCode = "DA"
                        },
                        new
                        {
                            Id = new Guid("af02bac4-a2da-43e2-be1f-0cbe72697177"),
                            CreatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7947),
                            CreatedBy = "System",
                            Name = "Human Resource",
                            UpdatedAt = new DateTime(2022, 9, 13, 17, 22, 18, 145, DateTimeKind.Local).AddTicks(7947),
                            UpdatedBy = "System",
                            WorkCode = "HR"
                        });
                });

            modelBuilder.Entity("HRIS.Domain.Entities.DailyRecord", b =>
                {
                    b.HasOne("HRIS.Domain.Entities.Employee", "Employee")
                        .WithMany("DailyRecords")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRIS.Domain.Entities.Employee", b =>
                {
                    b.HasOne("HRIS.Domain.Entities.Mandatory", "Mandatory")
                        .WithOne("Employee")
                        .HasForeignKey("HRIS.Domain.Entities.Employee", "MandatoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HRIS.Domain.Entities.Schedule", "Schedule")
                        .WithMany("Employees")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HRIS.Domain.Entities.WorkPosition", "WorkPosition")
                        .WithMany("Employees")
                        .HasForeignKey("WorkPositionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Mandatory");

                    b.Navigation("Schedule");

                    b.Navigation("WorkPosition");
                });

            modelBuilder.Entity("HRIS.Domain.Entities.LeaveRecord", b =>
                {
                    b.HasOne("HRIS.Domain.Entities.User", "User")
                        .WithMany("LeaveRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HRIS.Domain.Entities.User", b =>
                {
                    b.HasOne("HRIS.Domain.Entities.Employee", "Employee")
                        .WithMany("Users")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRIS.Domain.Entities.Employee", b =>
                {
                    b.Navigation("DailyRecords");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("HRIS.Domain.Entities.Mandatory", b =>
                {
                    b.Navigation("Employee")
                        .IsRequired();
                });

            modelBuilder.Entity("HRIS.Domain.Entities.Schedule", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HRIS.Domain.Entities.User", b =>
                {
                    b.Navigation("LeaveRecords");
                });

            modelBuilder.Entity("HRIS.Domain.Entities.WorkPosition", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
